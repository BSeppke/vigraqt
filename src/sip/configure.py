#!/usr/bin/env python
import os, sys, subprocess, glob, shutil

# adapted from http://www.develer.com/~naufraghi/PyQt3Support/PyQt3Support_PyQt4.3.3_GPL_r2.patch
def manage_cache(mname = "."):
	"""
	This function keeps a cache of all sip-generated *.cpp and *.h files
	and restores the stats of the newly generated set whenever the content
	is unchanged.
	"""
	import os.path
	cacheExists = True
	for dirname in [".cache", os.path.join(".cache", mname)]:
		if not os.path.isdir(dirname):
			os.mkdir(dirname)
			cacheExists = False

	if cacheExists:
		print "managing the %s module cache..." % mname
	else:
		print "creating the %s module cache..." % mname

	def isDifferent(filename1, filename2):
		try:
			if os.path.getsize(filename1) != os.path.getsize(filename2):
				return True
			else:
				lines1 = open(filename1).readlines()
				lines2 = open(filename2).readlines()
				if len(lines1) != len(lines2):
					return True
				else:
					for i in range(len(lines1)):
						if lines1[i] != lines2[i]:
							if "* Generated by SIP" not in lines1[i]:
								return True
					else:
						return False
		except OSError:
			return True

	for newfilename in (glob.glob(os.path.join(mname, "sip*.c*")) +
						glob.glob(os.path.join(mname, "sip*.h"))):
		oldfilename = os.path.join(".cache", newfilename)
		if isDifferent(newfilename, oldfilename):
			shutil.copy2(newfilename, oldfilename)
			if cacheExists: # opts.verbose:
				print "--> %s changed" % newfilename
		else:
			shutil.copystat(oldfilename, newfilename)

# --------------------------------------------------------------------

from optparse import OptionParser

print "checking SIP/PyQt4 configuration..."
import PyQt4.pyqtconfig as pyqt4
config = pyqt4.Configuration()

moddir = config.pyqt_mod_dir
if moddir.endswith("PyQt4"):
	moddir = moddir[:-6]

op = OptionParser(usage = "python %prog [options]")
op.add_option("-m", "--moddir", action = "store",
			  dest = "moddir", default = moddir,
			  help = "install directory for the python module (default %r)"
			  % moddir)
options, args = op.parse_args()

buildfile = "VigraQt.sbf"
command = [config.sip_bin, "-c", ".", "-b", buildfile] + \
		  config.pyqt_sip_flags.split() + \
		  ["-I", config.pyqt_sip_dir, "VigraQtmod.sip"]

print "running SIP (%s)..." % " ".join(command)
ec = subprocess.call(command)
if ec:
	sys.exit(ec)

manage_cache()

print "\nthe target directory for module installation will be:\n  %s\n" % options.moddir

print "generating Makefile..."
if sys.platform.startswith("win"):
	vigra_incdir = r"c:\vigra\include"
	QtMakefile = pyqt4.QtGuiModuleMakefile
else:
	vigra_incdir = os.popen("vigra-config --include-path").read().strip()
	QtMakefile = pyqt4.QtOpenGLModuleMakefile
makefile = QtMakefile(config, buildfile,
					  install_dir = options.moddir)
# for i in dir(makefile):
# 	print i
makefile.extra_include_dirs = ["..", vigra_incdir]
if sys.platform.startswith("win"):
	makefile.extra_libs         = ["VigraQt0"]
else:
	makefile.extra_libs         = ["VigraQt"]
makefile.extra_lib_dirs     = [os.path.join("..", "VigraQt")]
makefile.generate()

print "done (you can run 'make' now)."
